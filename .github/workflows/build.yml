# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH_BITVIEWER: BitViewer
  SOLUTION_FILE_PATH_KBSIM: KbSim
  SOLUTION_FILE_PATH_PCIE: PCIe
  SOLUTION_FILE_PATH_TIMER: Timer
  SOLUTION_FILE_PATH_IMGCONVERTER: ImgConverter
  SOLUTION_FILE_PATH_STOPWATCH: StopWatch
  SOLUTION_FILE_PATH_IDCARD: IDCard
  TOOLS_C_PATH: Tools/C

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Windows Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_PCIE}}
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_BITVIEWER}}
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_BITVIEWER}} /p:DefineConstants="ACRYLIC_SUPPORT" /p:TargetName=BitViewer_A.exe
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_KBSIM}}
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_TIMER}}
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_IMGCONVERTER}}
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_STOPWATCH}}
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH_IDCARD}}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: WinAppArtifact
        path: |
          ${{env.SOLUTION_FILE_PATH_PCIE}}/Release/*.exe
          ${{env.SOLUTION_FILE_PATH_BITVIEWER}}/x64/Release/*.exe
          ${{env.SOLUTION_FILE_PATH_KBSIM}}/Release/*.exe
          ${{env.SOLUTION_FILE_PATH_TIMER}}/Release/*.exe
          ${{env.SOLUTION_FILE_PATH_IMGCONVERTER}}/Release/*.exe
          ${{env.SOLUTION_FILE_PATH_STOPWATCH}}/Release/*.exe


  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Linux Build
      run: |
        make -C ${{env.TOOLS_C_PATH}}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: LinuxAppArtifact
        path: |
          ${{env.TOOLS_C_PATH}}/build/*
